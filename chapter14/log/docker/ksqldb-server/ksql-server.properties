listeners=http://0.0.0.0:8088
#ksql.internal.listener=http://ksqldb-server:8088

# in the book, we reference localhost instead of 'broker' for the hostname
# below. broker is the container name for the Kafka deployment in our
# docker-compose.yml file, but if we were running ksqldb server locally,
# we'd use localhost
bootstrap.servers=kafka:9092

# Inter-node listener on wildcard address and different port:
# Note: port 8099 could be locked down using port forward or other network tools.
ksql.advertised.listener=http://ksqldb-server:8088

# URL that other nodes can resolve and use to route requests to this node:
#ksql.advertised.listener=http://host1.internal.example.com:8099

#https://www.confluent.io/blog/ksqldb-pull-queries-high-availability/?_ga=2.23147122.991499660.1663122870-383312661.1663122870
ksql.streams.num.standby.replicas=1
ksql.query.pull.enable.standby.reads=true
ksql.heartbeat.enable=true
ksql.lag.reporting.enable=true
#ksql.logging.processing.topic.auto.create=true
ksql.service.id=testCluster
#If multiple ksqlDB servers connect to the same Kafka cluster (i.e. the same bootstrap.servers and the same ksql.service.id) they form a ksqlDB cluster and share the workload.
